COMPILER Qcir_file
/*--------------------------------------------------------------------------*/
CHARACTERS
  letter = "ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz".
  digit = "0123456789".
  cr  = '\r'.
  lf  = '\n'.
  tab = '\t'.

TOKENS
  ident  = ( letter | '_' ) { ( letter | digit | '_' ) } .
  number_ident = digit {digit | letter | '_' } .

IGNORE cr +  tab



PRODUCTIONS
/*------------------------------------------------------------------------*/
Qcir_file =
	Format_id Qblock_stmt Output_stmt { Gate_stmt nl { nl } } .
	
Format_id =
	/* { nl } */ SYNC "#QCIR-G14" [number_ident] nl { nl } .

Qblock_stmt =
	SYNC [ Free '(' Var { ',' Var } ')' nl { nl } ] { Qblock_quant } . 
	
Qblock_quant =
	SYNC Quant '(' Var { ',' Var } ')' nl { nl }.

Output_stmt =
	SYNC Output '(' Lit ')' nl { nl }.

Gate_stmt =
	SYNC Var '=' (
		Ngate_type '(' [Lit { ',' Lit }] ')' |
		Xor '(' Lit ',' Lit ')' |
		Ite '(' Lit ',' Lit ',' Lit ')' |
		Quant '(' Var { ',' Var } ';' Lit ')'
	) .

Quant =
	(Exists | Forall ) .

Var =
	( ident | number_ident ).

Lit = 
	( Var | '-' Var ) .

Ngate_type =
	(And | Or) .

Xor = 
	("xor" | "xoR" | "xOr" | "xOR" | "Xor" | "XoR" | "XOr" | "XOR").

Ite = 
	("ite" | "itE" | "iTe" | "iTE" | "Ite" | "ItE" | "ITe" | "ITE").

And =
	("and" | "anD" | "aNd" | "aND" | "And" | "AnD" | "ANd" | "AND").

Or =
	("or" | "oR" | "Or" | "OR").

Output = 
	("output" | "outpuT" | "outpUt" | "outpUT" | "outPut" | "outPuT" | "outPUt" | "outPUT" |
	 "ouTput" | "ouTpuT" | "ouTpUt" | "ouTpUT" | "ouTPut" | "ouTPuT" | "ouTPUt" | "ouTPUT" |
	 "oUtput" | "oUtpuT" | "oUtpUt" | "oUtpUT" | "oUtPut" | "oUtPuT" | "oUtPUt" | "oUtPUT" |
	 "oUTput" | "oUTpuT" | "oUTpUt" | "oUTpUT" | "oUTPut" | "oUTPuT" | "oUTPUt" | "oUTPUT" |
	 "Output" | "OutpuT" | "OutpUt" | "OutpUT" | "OutPut" | "OutPuT" | "OutPUt" | "OutPUT" |
	 "OuTput" | "OuTpuT" | "OuTpUt" | "OuTpUT" | "OuTPut" | "OuTPuT" | "OuTPUt" | "OuTPUT" |
	 "OUtput" | "OUtpuT" | "OUtpUt" | "OUtpUT" | "OUtPut" | "OUtPuT" | "OUtPUt" | "OUtPUT" |
	 "OUTput" | "OUTpuT" | "OUTpUt" | "OUTpUT" | "OUTPut" | "OUTPuT" | "OUTPUt" | "OUTPUT" ).

Free = 
	("free" | "freE" | "frEe" | "frEE" | "fRee" | "fReE" | "fREe" | "fREE" | "Free" | "FreE" | "FrEe" | "FrEE" | "FRee" | "FReE" | "FREe" | "FREE").

Exists =
	("exists" | "existS" | "exisTs" | "exisTS" | "exiSts" | "exiStS" | "exiSTs" | "exiSTS" |
	 "exIsts" | "exIstS" | "exIsTs" | "exIsTS" | "exISts" | "exIStS" | "exISTs" | "exISTS" |
	 "eXists" | "eXistS" | "eXisTs" | "eXisTS" | "eXiSts" | "eXiStS" | "eXiSTs" | "eXiSTS" |
	 "eXIsts" | "eXIstS" | "eXIsTs" | "eXIsTS" | "eXISts" | "eXIStS" | "eXISTs" | "eXISTS" |
	 "Exists" | "ExistS" | "ExisTs" | "ExisTS" | "ExiSts" | "ExiStS" | "ExiSTs" | "ExiSTS" |
	 "ExIsts" | "ExIstS" | "ExIsTs" | "ExIsTS" | "ExISts" | "ExIStS" | "ExISTs" | "ExISTS" |
	 "EXists" | "EXistS" | "EXisTs" | "EXisTS" | "EXiSts" | "EXiStS" | "EXiSTs" | "EXiSTS" |
	 "EXIsts" | "EXIstS" | "EXIsTs" | "EXIsTS" | "EXISts" | "EXIStS" | "EXISTs" | "EXISTS" ).

Forall =
	("forall" | "foralL" | "foraLl" | "foraLL" | "forAll" | "forAlL" | "forALl" | "forALL" |
	 "foRall" | "foRalL" | "foRaLl" | "foRaLL" | "foRAll" | "foRAlL" | "foRALl" | "foRALL" |
	 "fOrall" | "fOralL" | "fOraLl" | "fOraLL" | "fOrAll" | "fOrAlL" | "fOrALl" | "fOrALL" |
	 "fORall" | "fORalL" | "fORaLl" | "fORaLL" | "fORAll" | "fORAlL" | "fORALl" | "fORALL" |
	 "Forall" | "ForalL" | "ForaLl" | "ForaLL" | "ForAll" | "ForAlL" | "ForALl" | "ForALL" |
	 "FoRall" | "FoRalL" | "FoRaLl" | "FoRaLL" | "FoRAll" | "FoRAlL" | "FoRALl" | "FoRALL" |
	 "FOrall" | "FOralL" | "FOraLl" | "FOraLL" | "FOrAll" | "FOrAlL" | "FOrALl" | "FOrALL" |
	 "FORall" | "FORalL" | "FORaLl" | "FORaLL" | "FORAll" | "FORAlL" | "FORALl" | "FORALL" ).

nl = '\n'.

END Qcir_file .